{"ast":null,"code":"var _jsxFileName = \"/home/styxx/full_stack_open/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Statistics = props => {\n  const all = props.good + props.bad + props.neutral;\n  if (all === 0) return \"No Statistics Given\";\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: props.good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: props.neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: props.bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: (props.good - props.bad) / all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"positive - \", props.good * 100 / all, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nconst Button = _ref => {\n  let {\n    text,\n    fn\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: fn,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button;\nconst StatisticLine = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c3 = StatisticLine;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give FeedBack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fn: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fn: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fn: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"b+dSCZSTGsSbgrw87losFPjCAV0=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"StatisticLine\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Statistics","props","all","good","bad","neutral","Button","text","fn","StatisticLine","value","App","setGood","setNeutral","setBad"],"sources":["/home/styxx/full_stack_open/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Statistics = (props) => {\n  const all = props.good + props.bad + props.neutral\n  if (all === 0)return(\n    \"No Statistics Given\"\n  )\n  return(\n    <table>\n    <StatisticLine text = \"good\" value = {props.good}/>\n    <StatisticLine text = \"neutral\" value = {props.neutral}/>\n    <StatisticLine text = \"bad\" value = {props.bad}/>\n    <StatisticLine text = \"all\" value = {all}/>\n    <StatisticLine text = \"average\" value = {(props.good - props.bad)/all}/>\n    <div>positive - {props.good*100/all} %</div>\n    </table>\n  )\n}\nconst Button = ({ text,fn }) => {\n  return(\n    <button onClick = {fn}>{text}</button>\n  )\n}\n\nconst StatisticLine = ({ text,value }) => {\n  return(\n    <tr>\n    <td>text</td>\n    <td>value</td>\n    </tr>\n  )\n}\n\nconst App = () => {\n  const [ good,setGood ] = useState(0)\n  const [ neutral,setNeutral ] = useState(0)\n  const [ bad,setBad] = useState(0)\n  const all = good+neutral+bad\n  return(\n    <>\n    <h1>Give FeedBack</h1>\n    <Button fn = {() => setGood(good+1)} text = \"good\"/>\n    <Button fn = {() => setNeutral(neutral+1)} text = \"neutral\"/>\n    <Button fn = {() => setBad(bad+1)} text = \"bad\"/>\n    <h1>\n      statistics\n    </h1>\n    <Statistics good = {good} bad = {bad} neutral = {neutral}/>\n    </>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}